
interface TextState {
  text: string;
  index: number;
  x: number;
  y: number;
  width: number;
  height: number;
  startX: number;
  startY: number;
  rtl: boolean;
  buffer: string;
  drawing: boolean;
  outputWidth: number;
  outputHeight: number;
}
declare abstract class Window_Base extends Window {

  protected _opening: boolean;
  protected _closing: boolean;
  protected _dimmerSprite: Sprite;

  constructor(rect: Rectangle);
  initialize(rect: Rectangle);
  destroy(options?: { children?: boolean; texture?: boolean; baseTexture?: boolean;});
  checkRectObject(rect);
  lineHeight(): number;
  itemWidth(): number;
  itemHeight(): number;
  itemPadding(): number;
  baseTextRect(): Rectangle;
  loadWindowskin();
  updatePadding();
  updateBackOpacity();
  fittingHeight(numLines: number): number;
  updateTone();
  createContents();
  destroyContents();
  contentsWidth(): number;
  resetFontSettings();
  resetTextColor();
  update();
  updateOpen();
  updateClose();
  open();
  close();
  isOpening(): boolean;
  isClosing(): boolean;
  show();
  hide();
  activate();
  deactivate();
  systemColor(): string;
  translucentOpacity(): number;
  changeTextColor(color: string);
  changeOutlineColor(color: string);
  changePaintOpacity(enabled: boolean);
  drawRect(x: number,y: number, width: number, height: number);
  drawText(text: string,x: number,y: number,maxWidth: number,align: string);
  textWidth(text: string): number;
  drawTextEx(text: string,x: number,y: number, width: number);
  textSizeEx(text: string): {width: number,height: number};
  createTextState(text: string,x: number,y: number,width: number);
  processAllText(textState: TextState);
  flushTextState(textState: TextState);
  createTextBuffer(rtl: boolean): string;
  convertEscapeCharacters(text: string): string;
  actorName(n: number): string;
  partyMemberName(n: number): string;
  processCharacter(textState: TextState);
  proccessControlCharacter(textState: TextState,c: string);
  processNewLine(textState: TextState);
  obtainEscapeCode(textState: TextState): string;
  obtainEscapeParam(textState:TextState): string;
  processEscapeCharacter(code: string,textState:TextState);
  processColorChange(colorIndex: number);
  processDrawIcon(iconIndex: number,textState: TextState);
  makeFontBigger();
  makeFontSmaller();
  calcTextHeight(textState: TextState);
  maxFontSizeInLine(line: string): number;
  drawIcon(iconIndex: string,x: number,y: number);
  drawFace(faceName: string,faceIndex: number,x: number,y: number, width: number,height: number);
  drawCharacter(characterName: string,characterIndex: number,x: number,y: number);
  drawItemName(item: Game_Item,x: number,y: number, width: number);
  drawCurrencyValue(value: string,unit: string,x: number,y: number,width: number);
  setBackgroundType(type: number);
  showBackgroundDimmer();
  createDimmerSprite();
  hideBackgroundDimmer();
  updateBackgroundDimmer();
  refreshDimmerBitmap();
  playCursorSound();
  playOkSound();
  playBuzzerSound();
}